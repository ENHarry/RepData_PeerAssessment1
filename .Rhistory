install.packages(c("markdown", "shiny", "knitr", "ggplot2", "dplyr", "tidyr", "readr", "lubridate", "devtools", "magrittr", "packrat", "stringr", "haven", "leaflet", "DT", "roxygen2", "testthat", "htmlwidgets", "shinydashboard"))
install.packages(c("sqldf", "RMySQL", "forecast", "qcc", "randomForest", "XLConnect", "xlsx", "rgl", "ggvis", "threejs"))
install.packages(c("glmnet", "multcomp", "mgcv", "vcd", "swirl"))
install.packages(c("XML", "jsonlite", "httr", "data.table", "Rcpp"))
library("swirl", lib.loc="E:/R-3.3.0/library")
bye()
library(lubridate)
swirl()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
??trellis.par.set
# read dataset into R
fileurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(fileurl, temp)
unzip(temp, list = T)
dataset1 <- read.table(unzip(temp, "activity.csv"), header = T, sep = ",", stringsAsFactors = F)
unlink(temp)
unlink(temp)
View(dataset1)
class(dataset1)
dataset1[is.na(dataset1)] <- 0
View(dataset1)
library(data.table)
dt <- as.data.table(dataset1)
library(dplyr)
dt$date <- as.Date(dt$date)
View(dt)
?group_by
dtgroup <- group_by(dt, date)
dtanalysis <- summarise(dtgroup, sum(steps), mean(steps), median(steps))
View(dtgroup)
View(dtanalysis)
View(dtanalysis)
names(dtanalysis)
setnames(dtanalysis, c("date", "sum(steps)", "mean(steps)", "median(steps)"),
c("date", "total_steps", "mean_steps", "median_steps"))
View(dtanalysis)
hist(dtanalysis$total_steps, main = "Total Daily Steps", xlab = "Days", ylab = "Steps", col = "red")
hist(dtanalysis$total_steps, main = "Total Daily Steps", xlab = "Steps", ylab = "Frequency", col = "red")
dtanalysis$date <- strptime(dtanalysis$date, "%d/%m/%Y %H:%M:%S")
dtdate <- strptime(dtanalysis$date, "%d/%m/%Y %H:%M:%S")
plot(dtdate, dtanalysis$mean_steps, main = "Time Series of Average Steps",
type = "l", xlab = "Time", ylab = "Mean Steps")
View(dtanalysis)
plot(dtanalysis$date, dtanalysis$mean_steps, main = "Time Series of Average Steps",
type = "l", xlab = "Time", ylab = "Mean Steps")
View(dataset1)
hist(dtanalysis$date, dtanalysis$total_steps, main = "Total Daily Steps", xlab = "Date", ylab = "Steps", col = "red")
?plot
plot(dtanalysis$date, dtanalysis$total_steps, type = "h",
main = "Total Daily Steps", xlab = "Date", ylab = "Steps", col = "red")
?hist
dt_time <- strptime(dt$interval, "%H:%M:%S")
class(dt$interval)
?time
dt_time <- time(dt$interval)
dt_time
plot(dtanalysis$date, dtanalysis$total_steps, type = "h", lwd = 10,
main = "Total Daily Steps", xlab = "Date", ylab = "Steps", col = "red")
plot(dtanalysis$date, dtanalysis$total_steps, type = "h", lwd = 5,
main = "Total Daily Steps", xlab = "Date", ylab = "Steps", col = "red")
?plot
class(dt$steps)
class(dt$interval)
?group_by()
summarise(dtgroup)
summarise(dt)
names(dt)
setnames(dt, c("steps", "date", "interval"), c("steps", "date", "interval")
)
summarise(dt)
plot(dtanalysis$date, dtanalysis$mean_steps, main = "Time Series of Average Steps",
type = "l", xlab = "Time", ylab = "Mean Steps")
library("swirl")
options(editor = "internal")
swirl()
myedit("addPatt.R")
source("addPatt.R", local =  TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
d
svd2
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$v %*% (svd1$u[,1]*svd1$d[1])
a1 <- t(svd1$v[,1]) %*% (svd1$u[,1]*svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage()
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- diag(svd1$d[1:2]) %*% svd1$u[,1:2] %*%  t(svd1$v[,1:2])
diag
a2 <-  svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <-  svd1$u[,2:5] %*% diag(svd1$d[2:5]) %*% t(svd1$v[,2:5])
a2 <-  svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
sub1
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(cv(1:6))
showMe(colors(1:6))
showMe(1:6)
mdist <- sub1[, 1:3]
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-2], centers = 6)
kClust <- kmeans(sub1, centers = 6)
k
kmeans(sub1)
kmeans(sub1, centers = 6)
dim(sub1)
kClust <- kmeans(sub1[,1:563-2], centers = 6)
kClust <- kmeans(sub1[,1:(563-2)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
dim(pm0)
setwd("~/PerDev/Coursera/datasciencecoursera/Reproducible_Research/RepData_PeerAssessment1")
install.packages("imputeMissings")
?impute.knn
??impute.knn
install.packages("biocon")
source("https://bioconductor.org/biocLite.R")
biocLite()
??impute.knn
library("impute")
library(imputeMissings)
warnings()
install.packages("plyr")
